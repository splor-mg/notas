[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Base de conhecimento - Assessoria de Dados SPLOR",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\nDescription\n\n\nCategories\n\n\n\n\n\n\n\nundefined\n\n\nRelacionamento das bases no relatório operacional: método Concatenate x Linktable\n\n\n\n\n\n\n\n\nundefined\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "20231804T160439/index.html",
    "href": "20231804T160439/index.html",
    "title": "Relacionamento das bases no relatório operacional: método Concatenate x Linktable",
    "section": "",
    "text": "Tabelas fato são a base para qualquer ambiente de análise de dados. Armazenando medidas quantitativas de acontecimentos mensuráveis do negócio, no menor nível de detalhe possível, permitem análises ricas em detalhes, porque seus dados podem ser facilmente agrupados em um ou mais atributos de dimensão, permitindo uma vasta combinação de insigths e questionamentos.1\nCada tabela fato é focada em um processo específico do negócio da organização. Trazendo à realidade da SPLOR, temos diversos processos orçamentários acontecendo no SIAFI e SIAD, alimentando diariamente o armazém de informações, como por exemplo, execução de despesas (empenho, liquidação e pagamento), crédito (crédito inicial da LOA mais créditos adicionais), aprovação de cotas orçamentárias, entre outros.\nCada tabela fato gerada a partir de dados desses processos contém métricas e agregações próprias, mas também compartilham algumas umas com as outras, como por exemplo, unidade orçamentária, ação, grupo, fonte, elemento, item, credor, número de empenho, e etc. Com isso, é possível navegar entre as diversas tabelas e trazer para um relatório as suas métricas agregadas por dimensões em comum, o que se chama Drill Across, um dos pilares de estudo em Data Warehouse. 2\nAs ferramentas de BI, como o powerbi ou qlikview, são grandes facilitadores nesta tarefa, retirando a necessidade de inúmeras manipulações de planilhas para se criar ou atualizar um único relatório. Uma vez que, concluído o trabalho de modelagem dimensional e relacionamento entre tabelas na ferramenta, inúmeros relatórios podem ser facilmente gerados, com diferentes visões do negócio, com dados agregados em diferentes níveis, de rápida atualização e fácil distribuição aos usuários finais da informação.\nContudo, construir uma modelagem dimensional e relacionar diversas tabelas fato contendo dados agrupados em diferentes dimensões, ou granularidades, não é uma tarefa nada trivial, correspondendo a uma das tarefas mais importantes, senão a mais importante dentro as atividades para construção de um painel de relatórios em BI. Isto porque não há uma regra ou fórmula única a se seguir.\nCada projeto exige análise e estudo individualizados. É preciso ter em mente quais perguntas que se buscam responder, entender os processos de negócio, como os dados são gerados, as potencialidades e limitações resultantes dos possíveis cruzamentos entre duas ou mais tabelas fato distintas, para por fim poder dar início a este trabalho. Uma modelagem e relacionamentos entre tabelas incorretos levam necessariamente a resultados igualmente incorretos aos relatórios.\nO objetivo desta nota é lançar luz nesse sentido, apresentando a solução utilizada no painel relatório operacional qlikview na complexa tarefa de se criar uma modelagem e relacionar diferentes tabelas fato. O painel contém relatórios a partir de dados históricos e atualizados dos principais fluxos orçamentários do estado existentes no armazém de informações, universos SIAFI e SIAD, e da restimativa de receitas e despesas, em diferentes níveis de agregação.\nNas próximas sessões desta nota são apresentados dois métodos de relacionamento entre tabelas, o de empilhamento ou concatenate das bases, que já era utilizao em outro projeto da SPLOR, o painel da reestimativa da DCAF, comparando seus resultados ao utilizado no relatório operacional, o método linktable, a fim de justificar escolha por este último neste projeto.\n\n\nAs diferentes granularidades (dimensões) dos dados do ementário completo de bases utilizadas no projeto do relatório operacional qlikview pode ser verificado no data package relatorio operacional.\nNesta nota, para exemplificação dos métodos de relacionamento entre tabelas, são utilizadas pequenos exemplos fictícios de bases que remontam aos fluxos orçamentários reais de execução de despesas, crédito, restos a pagar e receita. As tabelas a seguir apresentam os dados utilizados.\n\n\n\nTabela receita \n\n\nUO_COD\nFONTE\nARRECADADO\n\n\n\n\n1001\n10\n300\n\n\n1001\n60\n300\n\n\n1002\n60\n300\n\n\n1003\n60\n300\n\n\n\n\n\n\n\n\nTabela crédito \n\n\nUO_COD\nGRUPO\nFONTE\nCREDITO\n\n\n\n\n1001\n3\n10\n1000\n\n\n1001\n4\n60\n1000\n\n\n1002\n3\n60\n1000\n\n\n1003\n3\n60\n1000\n\n\n\n\n\n\n\n\nTabela execução de despesas \n\n\nUO_COD\nGRUPO\nFONTE\nELEMENTO_ITEM\nEMPENHADO\n\n\n\n\n1001\n3\n10\n3999\n100\n\n\n1001\n4\n60\n5101\n120\n\n\n\n\n\n\n\n\nTabela restos a pagar \n\n\nUO_COD\nGRUPO\nFONTE\nELEMENTO_ITEM\nRP_PAGO_PROCESSADO\n\n\n\n\n1001\n3\n10\n3333\n100\n\n\n1003\n3\n60\n3999\n100\n\n\n\n\n\nVerificam-se que existem diferentes agregações dos dados entre as tabelas conforme figura Figure 1. As bases execução de despesas e restos a pagar contêm a mesma granularidade nos dados entre si (UO_COD, GRUPO, FONTE e ELEMENTO_ITEM), diferente da base crédito que não contém a dimensão ELEMENTO_ITEM e a base receita que somente contém as dimensões UO_COD e FONTE.\n\n\n\nFigure 1: Kimball enterprise bus matrix"
  },
  {
    "objectID": "20231804T160439/index.html#granularidade-das-bases-de-dados",
    "href": "20231804T160439/index.html#granularidade-das-bases-de-dados",
    "title": "Relacionamento das bases no relatório operacional: método Concatenate x Linktable",
    "section": "",
    "text": "As diferentes granularidades (dimensões) dos dados do ementário completo de bases utilizadas no projeto do relatório operacional qlikview pode ser verificado no data package relatorio operacional.\nNesta nota, para exemplificação dos métodos de relacionamento entre tabelas, são utilizadas pequenos exemplos fictícios de bases que remontam aos fluxos orçamentários reais de execução de despesas, crédito, restos a pagar e receita. As tabelas a seguir apresentam os dados utilizados.\n\n\n\nTabela receita \n\n\nUO_COD\nFONTE\nARRECADADO\n\n\n\n\n1001\n10\n300\n\n\n1001\n60\n300\n\n\n1002\n60\n300\n\n\n1003\n60\n300\n\n\n\n\n\n\n\n\nTabela crédito \n\n\nUO_COD\nGRUPO\nFONTE\nCREDITO\n\n\n\n\n1001\n3\n10\n1000\n\n\n1001\n4\n60\n1000\n\n\n1002\n3\n60\n1000\n\n\n1003\n3\n60\n1000\n\n\n\n\n\n\n\n\nTabela execução de despesas \n\n\nUO_COD\nGRUPO\nFONTE\nELEMENTO_ITEM\nEMPENHADO\n\n\n\n\n1001\n3\n10\n3999\n100\n\n\n1001\n4\n60\n5101\n120\n\n\n\n\n\n\n\n\nTabela restos a pagar \n\n\nUO_COD\nGRUPO\nFONTE\nELEMENTO_ITEM\nRP_PAGO_PROCESSADO\n\n\n\n\n1001\n3\n10\n3333\n100\n\n\n1003\n3\n60\n3999\n100\n\n\n\n\n\nVerificam-se que existem diferentes agregações dos dados entre as tabelas conforme figura Figure 1. As bases execução de despesas e restos a pagar contêm a mesma granularidade nos dados entre si (UO_COD, GRUPO, FONTE e ELEMENTO_ITEM), diferente da base crédito que não contém a dimensão ELEMENTO_ITEM e a base receita que somente contém as dimensões UO_COD e FONTE.\n\n\n\nFigure 1: Kimball enterprise bus matrix"
  },
  {
    "objectID": "20231804T160439/index.html#dados",
    "href": "20231804T160439/index.html#dados",
    "title": "Relacionamento das bases no relatório operacional: método Concatenate x Linktable",
    "section": "Dados",
    "text": "Dados\nApós a leitura dos dados, e o resultado será uma única tabela de dados empilhada, que pode ser verificada por meio do comando ctrl T:\n\n\n\n\n\n\n\nSchema base empilhada\n\n\n\n\n\n\n\n\n\nDados base empilhada\n\n\n\n\nFigure 2: Base empilhada\n\n\nObserva-se que a tabela empilhada contém todas as colunas de suas tabelas de origem. E nas linhas correspondentes a dados de uma determinada tabela, onde inexista alguma coluna da tabela empilhada, o seu valor retorna nulo. Por exemplo, a última linha corresponde a dados da tabela receita, em que há dados somente para UO e FONTE, restando nulo todas as demais colunas.\nCom os dados corretamente empilhados podem ser construídos relatórios na ferramenta."
  },
  {
    "objectID": "20231804T160439/index.html#visualizações",
    "href": "20231804T160439/index.html#visualizações",
    "title": "Relacionamento das bases no relatório operacional: método Concatenate x Linktable",
    "section": "Visualizações",
    "text": "Visualizações\nCom as bases lidas, dentro no ambiente de aba de criação de dashboards no qlikview, o próximo passo é inserir Novo Objeto de Pasta do tipo Lista para objetos de filtro e Gráfico/Tabela Simples para criação da Tabela com os dados desejados.\nNo nosso exemplo, construímos uma tabela contendo UO_COD e FONTE como dimensões, e as métricas de todos os processos orçamentários.\n\n\n\nPainel Concatenado\n\n\nFiltrando-se por dimensões existentes em todas as bases, por exemplo, FONTE, a tabela retorna as medidas existentes agrupadas nesta dimensão no valor selecionado.\n\n\n\nFiltro fonte de recurso\n\n\nEntretanto, quando se filtra por alguma dimensão inexistente em alguma das bases, suas métricas retornam nulo. Como exemplo, ao se filtrar por ELEMENTO_ITEM 3999, os dados CREDITO e ARRECADADO retornam zero (Como default o qlikview converte dados nulos em zero nos relatórios).\nCom base na tabela resultante do empilhamento das bases, o resultado do filtro está de acordo com o esperado, uma vez que, de fato, inexiste a dimensão ELEMENTO_ITEM nas tabelas crédito e receita.\nContudo, o resultado desejado para uso na SPLOR é que ao se filtrar por ELEMENTO_ITEM 3999, o painel também retorne valores de CREDITO e RECEITA no nível agregação compartilhada entre as bases. Ou seja, como neste ELEMENTO_ITEM ocorreu execução de despesas (empenho e pagamento de RP) na UO_COD 1001 e 1003, GRUPO 3, FONTE 10 e 60, o painel deve retornar o total ARRECADADO nessas UOs e fontes, e da base crédito o valor do CREDITO dessas UOs, fontes e grupo de despesa.\n\n\n\nFiltro elemento item\n\n\nNo painel relatorio operacional qlikview esta solução foi atingida a partir de uma adaptação ao método linktable de relacionamento de bases demonstrada a seguir."
  },
  {
    "objectID": "20231804T160439/index.html#método-linktable-com-uma-chave",
    "href": "20231804T160439/index.html#método-linktable-com-uma-chave",
    "title": "Relacionamento das bases no relatório operacional: método Concatenate x Linktable",
    "section": "Método linktable com uma chave",
    "text": "Método linktable com uma chave\nO primeiro passo é criar nas tabelas fato uma coluna chave correspondente ao seu conjunto de dimensões, deixando para leitura somente esta chave e a métrica.\nexecucao_despesas:\nLOAD \n     UO_COD&'|'&GRUPO_COD&'|'&FONTE_COD&'|'&ELEMENTO_ITEM_COD as chave,\n     DESPESA_EMP\nFROM\n[data\\execucao.xlsx]\n(ooxml, embedded labels, table is base);\n\nrestos_a_pagar:\nLOAD  \n     UO_COD&'|'&GRUPO_COD&'|'&FONTE_COD&'|'&ELEMENTO_ITEM_COD as chave,\n     PAGO_PROCESSADO\nFROM\n[data-raw\\restos_a_pagar.xlsx]\n(ooxml, embedded labels, table is base);\n\ncredito:\nLOAD  \n     UO_COD&'|'&GRUPO_COD&'|'&FONTE_COD as chave\n     CREDITO\nFROM\n[data-raw\\credito.xlsx]\n(ooxml, embedded labels, table is base);\n\nreceita:\nLOAD \n     UO_COD&'|'&FONTE as chave,\n     ARRECADADO\nFROM\n[data\\receita.xlsx]\n(ooxml, embedded labels, table is base);\nO segundo passo é criar a tabela link empilhando todas as dimensões e coluna chave (para permitir a comunicação com as tabelas fato) e utilizar a função distinct para retirar linhas duplicadas.\nlink:\nLOAD \nDistinct\n    UO_COD&'|'&GRUPO&'|'&FONTE&'|'&ELEMENTO_ITEM as chave,\n    UO_COD, \n    GRUPO, \n    FONTE, \n    ELEMENTO_ITEM\nFROM\n[data\\execucao.xlsx]\n(ooxml, embedded labels, table is base);\n\nConcatenate\n\nLOAD\nDistinct\n    UO_COD&'|'&GRUPO&'|'&FONTE&'|'&ELEMENTO_ITEM as chave,\n    UO_COD, \n    GRUPO, \n    FONTE, \n    ELEMENTO_ITEM\nFROM\n[data\\restos_a_pagar.xlsx]\n(ooxml, embedded labels, table is base);\n\nConcatenate\n\nLOAD \nDistinct\n    UO_COD&'|'&GRUPO&'|'&FONTE as chave, \n    UO_COD, \n    GRUPO, \n    FONTE\nFROM\n[data\\credito.xlsx]\n(ooxml, embedded labels, table is base);\n\nConcatenate\n\nLOAD \nDistinct\n     UO_COD&'|'&FONTE as chave, \n     UO_COD,\n     FONTE\nFROM\n[data\\receita.xlsx]\n(ooxml, embedded labels, table is base)\n\nDados\nConforme imagem do modelo dimensional, diferente do método de empilhamento, o método linktable preserva as tabelas fato com suas métricas, ligadas por uma chave à tabela de ligação.\n\n\n\nSchema modelagem linktable\n\n\nObservando-se os dados armazenados nas tabelas, verifica-se que em cada linha na tabela link existe uma chave corresponde a uma linha em um das tabelas fato. Mas poderia, se fosse o caso, ser também uma relação um para muitos.\n\n\n\nDados modelagem linktable\n\n\nAo se filtrar pela dimensão ELEMENTO_ITEM 3999, o resultado foi o mesmo que ao do método de empilhamento das tabelas. Ou seja, os valores das tabelas crédito e receita retornaram nulos. Isto porque em suas chaves não existe esta dimensão.\n\n\n\nFiltro modelagem linktable\n\n\nO caminho seguido para se obter o resultado esperado dos filtros foi observando o modo automático do qlikiview, que cria uma espécie de tabela link com várias chaves, uma para cada conjunto de dimensões, conforme tópico a seguir."
  },
  {
    "objectID": "20231804T160439/index.html#resultado-do-relacionamento-entre-tabelas-automático",
    "href": "20231804T160439/index.html#resultado-do-relacionamento-entre-tabelas-automático",
    "title": "Relacionamento das bases no relatório operacional: método Concatenate x Linktable",
    "section": "Resultado do relacionamento entre tabelas automático",
    "text": "Resultado do relacionamento entre tabelas automático\n\n\n\nautomatico\n\n\nCom os dados da nota, a ferramenta foi capaz de entregar o resultado esperado. De forma automática foi criada a tabela $Syn 6 Table, análoga a tabela link ou linktable contendo todas as dimensões, ligadas às tabelas, onde restaram somente as métricas, por chaves específicas para cada tabela de acordo o conjunto de dimensões de cada uma delas.\n\n\n\nautomatico\n\n\nO resultado do filtro do ELEMENTO_ITEM 3999 é de acordo com o esperado pelo usuário da SPLOR, trazendo dados de CREDITO e ARRECADADOna estrutura orçamentária correspondente existente nessas bases.\nO que observou-se no comportamento automático é que são criadas uma chave para cada conjunto de dimensões existentes na tabela fato. Deste modo as tabelas passam a responder ao filtro como desejado. Retornando o dado de cada uma delas no nível de agregação compartilhado com as demais."
  },
  {
    "objectID": "20231804T160439/index.html#resultado-do-método-linktable-com-múltiplas-chaves",
    "href": "20231804T160439/index.html#resultado-do-método-linktable-com-múltiplas-chaves",
    "title": "Relacionamento das bases no relatório operacional: método Concatenate x Linktable",
    "section": "Resultado do método Linktable com múltiplas chaves:",
    "text": "Resultado do método Linktable com múltiplas chaves:\n\n\n\nSchema modelagem linktable com múltiplas chaves\n\n\nO resultado foi a tabela tabela de ligação ligadas a cada uma das tabelas por meio de chaves específicas para cada uma delas.\n\n\n\nDados modelagem linktable com múltiplas chaves\n\n\nAgora cada linha da tabela link contém não apenas uma chave, mas uma para cada conjunto de dimensões existentes em cada tabela.\n\n\n\nFiltro modelagem linktable com múltiplas chaves\n\n\nObservando-se as tabelas acima é possível verificar o comportamento das tabelas ao se filtrar por alguma dimensão não compartilhada entre todas elas. A tabela link, agora contendo todas chaves em cada linha, é capaz de trazer a métrica de todas as tabelas, até o nível de agregação das dimensões existentes em sua respectiva chave."
  },
  {
    "objectID": "20231804T160439/index.html#footnotes",
    "href": "20231804T160439/index.html#footnotes",
    "title": "Relacionamento das bases no relatório operacional: método Concatenate x Linktable",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://decisionworks.com/2003/10/no-detail-too-small/↩︎\nhttps://www.kimballgroup.com/2003/04/the-soul-of-the-data-warehouse-part-two-drilling-across/↩︎\nhttps://help.qlik.com/en-US/qlikview/May2023/Subsystems/Client/Content/QV_QlikView/Scripting/synthetic-keys.htm↩︎"
  }
]