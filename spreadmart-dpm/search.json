[
  {
    "objectID": "20230425T104833/index.html",
    "href": "20230425T104833/index.html",
    "title": "Data package manager (dpm)",
    "section": "",
    "text": "At the basic level a data package manager should allow the installation, update and removal of data packages.\n\n\nThe data sources1 of a given project should be specified in a top level data package in the package.sources property. To download the source data packages you can run\ndpm install\n\n\n\n\n\n\nExample\n\n\n\n\n\nFor the data package\nname: spreadmart\ntitle: Data mart de dados orçamentários\nresources:\n  - name: datamart\n    path: datamart.db\nsources:\n  - name: despesa\n    title: Despesa Orçamentária\n    path: https://dados.mg.gov.br/dataset/despesa\n  - name: ppag2023\n    title: Plano Plurianual\n    path: https://raw.githubusercontent.com/splor-mg/ppag2023-dadosmg/main/datapackage.yaml\nRunning dpm install will create or update the .gitignore file and store fully dereferenced2 data packages in their folders:\nspreadmart/\n├── .gitignore\n├── datapackage.yaml\n└── datapackages\n    ├── despesa\n    │   ├── data\n    │   │   └── data.csv\n    │   └── datapackage.json\n    └── ppag2023\n        ├── data.csv\n        └── datapackage.json\n\n\n\nIf you run dpm install again, even if there are new versions upstream, nothing will happen. However, if there are new packages listed in package.sources they will be downloaded. In order to update all installed packages overwriting the existing files run:\ndpm update\nYou can also update a specific package with\ndpm update &lt;package-name&gt;\nWhere &lt;package-name&gt; corresponds to the package.sources.name property3.\nYou can remove a data package with\ndpm rm &lt;package-name&gt;\nThis will remove the data package from package.sources and also remove the folder datapackages/&lt;package.sources.name&gt;/.\n\n\n\nWhen the upstream data package is not under your control, it might be a good idea to inspect the new version of the data package before doing an update. Here’s how that workflow works with dpm.\nFirstly you need to download the newer version to a local cache by running:\ndpm fetch # fetch all data packages\nor\ndpm fetch &lt;package-name&gt;\nNow you can run\ndpm diff &lt;package-name&gt;\nwhich will show a summary of schema, metadata, and data changes between you current installed and cached version. After you have performed impact analysis on your data sources you can run dpm update &lt;package-name&gt;."
  },
  {
    "objectID": "20230425T104833/index.html#spec",
    "href": "20230425T104833/index.html#spec",
    "title": "Data package manager (dpm)",
    "section": "",
    "text": "At the basic level a data package manager should allow the installation, update and removal of data packages.\n\n\nThe data sources1 of a given project should be specified in a top level data package in the package.sources property. To download the source data packages you can run\ndpm install\n\n\n\n\n\n\nExample\n\n\n\n\n\nFor the data package\nname: spreadmart\ntitle: Data mart de dados orçamentários\nresources:\n  - name: datamart\n    path: datamart.db\nsources:\n  - name: despesa\n    title: Despesa Orçamentária\n    path: https://dados.mg.gov.br/dataset/despesa\n  - name: ppag2023\n    title: Plano Plurianual\n    path: https://raw.githubusercontent.com/splor-mg/ppag2023-dadosmg/main/datapackage.yaml\nRunning dpm install will create or update the .gitignore file and store fully dereferenced2 data packages in their folders:\nspreadmart/\n├── .gitignore\n├── datapackage.yaml\n└── datapackages\n    ├── despesa\n    │   ├── data\n    │   │   └── data.csv\n    │   └── datapackage.json\n    └── ppag2023\n        ├── data.csv\n        └── datapackage.json\n\n\n\nIf you run dpm install again, even if there are new versions upstream, nothing will happen. However, if there are new packages listed in package.sources they will be downloaded. In order to update all installed packages overwriting the existing files run:\ndpm update\nYou can also update a specific package with\ndpm update &lt;package-name&gt;\nWhere &lt;package-name&gt; corresponds to the package.sources.name property3.\nYou can remove a data package with\ndpm rm &lt;package-name&gt;\nThis will remove the data package from package.sources and also remove the folder datapackages/&lt;package.sources.name&gt;/.\n\n\n\nWhen the upstream data package is not under your control, it might be a good idea to inspect the new version of the data package before doing an update. Here’s how that workflow works with dpm.\nFirstly you need to download the newer version to a local cache by running:\ndpm fetch # fetch all data packages\nor\ndpm fetch &lt;package-name&gt;\nNow you can run\ndpm diff &lt;package-name&gt;\nwhich will show a summary of schema, metadata, and data changes between you current installed and cached version. After you have performed impact analysis on your data sources you can run dpm update &lt;package-name&gt;."
  },
  {
    "objectID": "20230425T104833/index.html#footnotes",
    "href": "20230425T104833/index.html#footnotes",
    "title": "Data package manager (dpm)",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAs fontes de dados podem ser data packages ou conjuntos de dados do portal https://dados.mg.gov.br/ que possuem a propriedade resources_ids com o mapeamento entre recursos do data package e do conjunto de dados↩︎\nSee https://github.com/frictionlessdata/framework/issues/1449↩︎\nWe don’t use the upstream package.name because it could change and break lineage between related data packages.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Base de conhecimento - Assessoria de Dados SPLOR",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\nDescription\n\n\nCategories\n\n\n\n\n\n\nundefined\n\n\nData package manager (dpm)\n\n\nFrancisco Alves\n\n\n\n\n\nspec,cli,frictionless\n\n\n\n\n\n\nNo matching items"
  }
]